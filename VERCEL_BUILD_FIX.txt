# Vercel Build Error Fix Guide

## Fixing the Two Critical Errors

This guide specifically addresses the following Vercel deployment errors:

1. **Entry Module Resolution Error**
   ```
   Could not resolve entry module "client/index.html"
   ```

2. **Server Entry Point Error**
   ```
   The entry point "server/index.ts" cannot be marked as external
   ```

## Solution Steps

### 1. Update vercel.json

Replace your current vercel.json with this version:

```json
{
  "version": 2,
  "builds": [
    {
      "src": "package.json",
      "use": "@vercel/node",
      "config": {
        "buildCommand": "cd client && npx vite build --outDir ../dist/public && cd .. && npx esbuild server/index.ts --format=esm --platform=node --bundle --outdir=dist --external:express --external:pg",
        "outputDirectory": "dist"
      }
    }
  ],
  "routes": [
    { "src": "/api/(.*)", "dest": "/dist/index.js" },
    { "src": "/health", "dest": "/dist/index.js" },
    { "src": "/(.*)", "dest": "/dist/public/$1" }
  ],
  "env": {
    "NODE_ENV": "production"
  }
}
```

This configuration:
- Builds the client and server separately
- Specifies explicit externals to prevent the second error
- Properly routes API requests to the server

### 2. Fix Database Connection

Update your server/db.ts file to use the database-config.ts helper:

```javascript
import { neonConfig } from '@neondatabase/serverless';
import ws from "ws";
import { initializeDatabase } from './database-config';

// Configure Neon for WebSockets
neonConfig.webSocketConstructor = ws;

// Initialize database with proper configuration for the current environment
const { pool, db } = initializeDatabase();

// Export both the raw pool for health checks and the Drizzle ORM instance
export { pool, db };
```

### 3. Environment Variables

Ensure these environment variables are set in your Vercel project:

- `DATABASE_URL` - Make sure it includes `?sslmode=require` for Neon PostgreSQL
- `SESSION_SECRET` - A strong random string

### 4. Run the Fix Scripts

Before deploying, run:

```
node fix-vercel-deployment.js
```

This will:
- Check and fix your environment setup
- Create necessary serverless function entrypoints
- Verify database connectivity

### 5. Deploy to Vercel

After these changes:

1. Commit and push your changes to your repository
2. Deploy through the Vercel dashboard or CLI

## Troubleshooting

If you still encounter issues:

1. Check the Vercel build logs for specific errors
2. Ensure DATABASE_URL is correctly formatted with SSL mode
3. Try using the vercel-build.js script instead of the default build command
